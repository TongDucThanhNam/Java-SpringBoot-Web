package com.example.javawebdemo.Controllers;

import com.example.javawebdemo.Models.Products;
import com.example.javawebdemo.Respositories.ProductRepository;
import com.example.javawebdemo.Respositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import java.util.List;

@Controller // // This means that this class is a Controller
public class ShoppingController {
    @Autowired // This means to get the bean called userRepository, which is auto-generated by Spring, we will use it to handle the data
    ProductRepository productRepository;

    @Autowired // This means to get the bean called userRepository, which is auto-generated by Spring, we will use it to handle the data
    UserRepository userRepository;

    @GetMapping("/shopping-cart") // Map ONLY GET Requests, get directory /shopping-cart and return shopping-cart.html
    public String shoppingCart(Model model) {
        return "shopping/shopping-cart";
    }

    @GetMapping("/product-page/{id}") // Map ONLY GET Requests, get directory /product-page/{id} and return product-page.html
    public String productPage(Model model, @PathVariable String id) {
        // Get product by id from database and add it to the model to be displayed on the page (product-page.html)
        Products product = productRepository.findById(Long.parseLong(id)).get();
        model.addAttribute("product", product);

        // Get all products from database and add it to the model to be displayed on the page (product-page.html)
        List<Products> products = (List<Products>) productRepository.findAll();
        model.addAttribute("products", products);
        return "shopping/product-page";
    }

    @GetMapping("/payment-page") // Map ONLY GET Requests, get directory /payment-page and return payment-page.html
    public String paymentPage() {
        return "shopping/payment-page";
    }

    @GetMapping("/catalog-page") // Map ONLY GET Requests, get directory /catalog-page and return catalog-page.html
    public String catalogPage(Model model) {
        // Get all products from database and add it to the model to be displayed on the page (catalog-page.html)
        List<Products> products = (List<Products>) productRepository.findAll();
        model.addAttribute("products", products);
        return "shopping/catalog-page";
    }
}
